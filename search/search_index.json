{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"A version control system for software 2.0. Introduction Stockroom is a platform to version models, data, parameters, experiment artifacts etc. alongside git versioned source code. It is easy . The APIs are very similar to dictionaries in python It works alongside Git - in case you need to version source code as well. It's OK if you don't. High performance , thanks to the amazing hangar library [Upcoming] Tight integration with PyTorch . So that you don't need to write the complex pipeline code. Why One important motivation behind the initial design of stockroom is to avoid users learning another tool for versioning. We try to make the APIs as minimal and familiar as possible. Similar to other versioning tools, stockroom let \"git\" does checkout and rely on \"git\" to move between branches/commits. But unlike other tools, we channel your data access through the smart API so that we don't need to move the huge data files around when you traverse between commits. Example from stockroom import StockRoom import numpy as np stock = StockRoom () weights = stock . model [ 'resnet50' ] model . load_state_dict ( weights ) for e in range ( epochs ): for i in range ( limit ): x , y = stock . data [ 'dataset_name' , i ] out = model ( x ) update_weights ( out , y ) if loss < previous_loss : stock . model [ 'resnet50' ] = model . state_dict () stock . commit ( 'adding a better model) Installation $ pip install stockroom ---> 100% Contributing We'd love to have you in the contributors list. Do check out the contributor's guide before submitting a PR. We recognize and celebrate each contributions in possible ways we can; here is our latest #Hall-Of-Fame License This project is licensed under the terms of the Apache Software License 2.0","title":"Home"},{"location":"#introduction","text":"Stockroom is a platform to version models, data, parameters, experiment artifacts etc. alongside git versioned source code. It is easy . The APIs are very similar to dictionaries in python It works alongside Git - in case you need to version source code as well. It's OK if you don't. High performance , thanks to the amazing hangar library [Upcoming] Tight integration with PyTorch . So that you don't need to write the complex pipeline code.","title":"Introduction"},{"location":"#why","text":"One important motivation behind the initial design of stockroom is to avoid users learning another tool for versioning. We try to make the APIs as minimal and familiar as possible. Similar to other versioning tools, stockroom let \"git\" does checkout and rely on \"git\" to move between branches/commits. But unlike other tools, we channel your data access through the smart API so that we don't need to move the huge data files around when you traverse between commits.","title":"Why"},{"location":"#example","text":"from stockroom import StockRoom import numpy as np stock = StockRoom () weights = stock . model [ 'resnet50' ] model . load_state_dict ( weights ) for e in range ( epochs ): for i in range ( limit ): x , y = stock . data [ 'dataset_name' , i ] out = model ( x ) update_weights ( out , y ) if loss < previous_loss : stock . model [ 'resnet50' ] = model . state_dict () stock . commit ( 'adding a better model)","title":"Example"},{"location":"#installation","text":"$ pip install stockroom ---> 100%","title":"Installation"},{"location":"#contributing","text":"We'd love to have you in the contributors list. Do check out the contributor's guide before submitting a PR. We recognize and celebrate each contributions in possible ways we can; here is our latest #Hall-Of-Fame","title":"Contributing"},{"location":"#license","text":"This project is licensed under the terms of the Apache Software License 2.0","title":"License"}]}